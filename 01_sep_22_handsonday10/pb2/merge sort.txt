using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mergesort1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("enter size of array");
            int n = Convert.ToInt32(Console.ReadLine());

            int[] arr = new int[n];
            Console.WriteLine("enter elements of an array");
            for (int i = 0; i < arr.Length; i++)
            {
                arr[i] = Convert.ToInt32(Console.ReadLine());
            }
            Console.WriteLine("before sorting:");
            for (int h = 0; h < arr.Length; h++)
            {
                Console.WriteLine(arr[h]);
            }
            mergesort11(arr,0,arr.Length-1);
            Console.WriteLine("after sorting using merge sort:");
            for (int h = 0; h < arr.Length; h++)
            {
                Console.WriteLine(arr[h]);
            }
            Console.Read();
        }
        static public void mergesort11(int[] a1,int lb,int ub)
        {
            int mid;
            if(lb<ub)
            {
                mid = (lb + ub) / 2;
                mergesort11(a1, lb, mid);
                mergesort11(a1, mid + 1, ub);
                merge(a1, lb, mid, ub);
            }
        }
        static public void merge(int[] a11,int lb1,int mid1,int ub1)
        {
            int i, j, k;
            //Console.WriteLine("enter size of array");
            //int n1 = Convert.ToInt32(Console.ReadLine());
            int[] b = new int[20];
            i = lb1;
            j = mid1+1;
            k = lb1;
            while(i<=mid1 && j<=ub1)
            {
                if (a11[i] <= a11[j])
                {
                    b[k] = a11[i];
                    i++;k++;
                }
                else
                {
                    b[k] = a11[j];
                    j++;k++;
                }
            }
            if(i>mid1)
            {
                while(j<=ub1)
                {
                    b[k] = a11[j];
                    j++;k++;
                }
            }
            else
            {
                while (i <= mid1)
                {
                    b[k] = a11[i];
                    i++; k++;
                }
            }
            for(k=lb1;k<=ub1;k++)
            {
                a11[k] = b[k];
            }
        }
    }
}
