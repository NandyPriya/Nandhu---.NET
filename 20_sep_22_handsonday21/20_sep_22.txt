TASK 1
------------------------------
------------------------------
1)create database library
use library
------------------------------
create table Member(
Member_Id Numeric(5),
Member_Name char(25),
Acc_Open_Date Date,
Max_Books_Allowed numeric(2),
Penalty_Amount numeric(7,2)

)
----------------------------------
create table Book(
Book_No Numeric(6),
Book_Name varchar(30),
Author char(30),
Cost numeric(7,2),
Category char(10)

)
--------------------------------------
create table Issue(
Lib_Issue_Id Numeric(10),
Book_No numeric(6),
Member_Id numeric(5),
Issue_Date date,
Return_date date

)
-------------------------------------------
2)sp_help Book;
sp_help Issue;
sp_help Member;
-------------------------------------
3)alter table Issue 
add Comments varchar(100);
--------------------------------------
4)alter table member
alter column Member_Name char(30);
-------------------------------------
5)
alter table Issue 
add Reference char(30);
------------------------------------
6)alter table issue 
drop column reference;
--------------------------------------
7)EXEC sp_rename 'issue','Lib_Issue';
-------------------------------------
8) alter table member
 alter column member_id int not null;
alter table member
 add primary key(member_id)
insert into member values(1,'Richa Sharma','2005-12-10',5,50);
insert into member values(2,'Garima Sen','2022-09-20',3,null);
insert into member values(3,'Nandhini priya','2001-05-06',null,100);
insert into member values(4,'Ajay',null,6,25);
insert into member values(5,null,'2007-11-27',1,5);
--------------------------------------------------------
9)alter table member
alter column member_name char(20);
---------------------------------------------------------
10)
insert into member (Max_books_allowed)values(100);
error:Msg 8115, Level 16, State 8, Line 13
Arithmetic overflow error converting int to data type numeric.
The statement has been terminated.
---------------------------------------------------------------
11)create table member101(member_id int not null primary key,member_name char(20) null,acc_open_date date null,max_books_allowed numeric(2,0) null,penalty_amount numeric(7,2) null);
insert into member101 values(1,'Richa Sharma','2005-12-10',5,50);
insert into member101 values(2,'Garima Sen','2022-09-20',3,null);
-------------------------------------------------------------------
12)alter table book alter column book_no int not null;
alter table book add primary key(book_no)

insert into book values(101,'Let us C','Denis Ritchie',450,'System')
insert into book values(102,'Oracle-Complete Ref','Loni',550,'Database')
insert into book values(103,'Mastering SQL','Loni',250,'Database')
insert into book values(104,'PL SQL-Ref','Scott Urman',750,'Database')
--------------------------------------------------------------------------
13)
insert into book values(105,'ponniyin selvan','karki',452,'system'),(106,'mahabharata','vyasa',500,'database')

------------------------------------------------------------------
14)create table Book101(book_no int not null primary key,book_name varchar(30) null, author char(30) null,cost numeric(7,2) null,category char(10) null)
---------------------------------------------------------------
15)insert into Book101 select * from book
--------------------------------------------
select * from book101;
--------------------------------------------------
16)save the sql file in ssms
-------------------------------------------------
17)select * from book101;
select * from book;
select * from lib_issue;
select * from member;
select * from member101;
----------------------------------------------
18)insert into book values(105,'National Geographic','Adis Scott',1000,'Science')
--------------------------------------------------------------------
19)insert into book values(105,'National Geographic','Adis Scott',1000,'Science')
begin tran;
rollback;
-------------------------------------------------------
20)update book set cost=300.00,category='RDBMS' where book_no=103;
----------------------------------------------------------------------
21)EXEC sp_rename 'Lib_Issue','Issue';
-----------------------------------------------------------------------
22)alter table issue 
alter column lib_issue_id numeric(10) not null 
alter table issue 
add primary key(lib_issue_id)
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7001,101,1,'10/12/2006');
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7002,102,2,'2006-12-25');
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7003,104,1,'2006-01-15');
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7004,101,1,'2006-07-04');
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7005,104,2,'2006-11-15');
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7006,101,3,'2006-02-18');

------------------------------------------------------------------------
23)insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7007,101,2,'2006-10-15');
insert into issue(lib_issue_id,book_no,member_id,issue_date) values(7008,102,3,'2006-02-19');
--------------------------------------------------------------------------------------------
24)update issue set return_date='2006-11-30' where lib_issue_id =7005;
update issue set return_date='2006-07-19' where lib_issue_id =7004;
-------------------------------------------------
25)update member set penalty_amount = 100 where member_name='Garima sen'
---------------------------------------------------------------------------
26)delete from issue where member_id=1 and issue_date < '2006-12-10';
------------------------------------------------------------------------------
27)delete from book where category <>'RDBMS' and category<>'Database';
------------------------------------------------------------------------------
28)
drop table member101;
-------------------------------
29)drop table Book101;
---------------------------------
30)sp_help member;
sp_help issue;
sp_help book;
select * from member;
select * from issue;
select * from book;
--------------------------------
31)select * from library.INFORMATION_SCHEMA.TABLES
go
----------------------------------------------------
TASK 2
------------------------
-----------------------------
1)select * from member where year(Acc_Open_Date) = 2006;
----------------------------------------
2)select Book_Name from book where author='Loni' and cost < 600.00
-------------------------------------------
3)select * from issue where Return_date is null
------------------------------------------------------------
4)update issue set Return_date ='31-dec-2006' where Lib_Issue_Id <>7005 and Lib_Issue_Id <>7006;
------------------------------------------------------------
5) select* from Issue where Datediff( Day,Issue_Date,Return_Date) >30

------------------------------
6)select * from book where cost between 500.00 and 750.00 and Category='database';
-----------------------------------
7)select * from book where category in('science','fiction','database','management')
---------------------------------------------
8)select * from member order by penalty_amount desc;
---------------------------------------------------------
9)select * from book order by category asc,cost desc
-------------------------------------------------------
10)select * from book where Book_Name like '%SQL%'
-----------------------------------------------------
11)select * from member where member_name like 'R%' or member_name like 'G%' and member_name like '%I%'
-------------------------------------------------

13)Select CONCAT( Book_No,' ','is written by',' ' ,Author) as 'Book id and author' from Book

------------------------------------------
17)Select CONCAT( Book_Name,' ','*' ,Author) as 'Book name and author' from Book
----------------------------------------------
18)select lib_issue_id,issue_date,return_date,Datediff( Day,Issue_Date,Return_Date)from issue;
-----------------------------------------------------------
19)select * from issue order by Issue_Date
------------------------------------------------------------
20)select sum(max_books_allowed)as totalno_of_books from member where Member_Id = 1;
-------------------------------------------------------------------------
21)select sum(Penalty_amount) from Member
------------------------------------------------------
22)select sum(cost)as totalcostofdatabasecategory from Book where category ='database'
--------------------------------------------------------------
23)select min(cost)cheapestprice from book
---------------------------------------------------------------
24)select min(issue_date) as 'firstbook issued'  from issue;
  
---------------------
25)select max(issue_date)as 'latest book issued' from issue;
---------------------------
26)select AVG(cost) from book where Category = 'database';
-----------------------------