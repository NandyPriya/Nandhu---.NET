using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace genericstack1
{
    internal class genricstackoperations<T>
    {
        internal static readonly int max = 1000;
        internal T[] stack = new T[max];
        int top;

        internal bool isStackEmpty()
        {
           
            return (top < 0);
        }

        public genricstackoperations()
        {
            top = -1;
        }

        internal int Push(T data)
        {
            if (top >= max)
            {
                //Console.WriteLine("No space on the stack");
                return -1; ;
            }
            else
            {
                stack[++top] = data;

            }
            return 0;
        }

        internal T Pop()
        {
            T temp = default(T);
            T value ;
            if (top < 0)
            {
                //Console.WriteLine("No elements on the stack");
                return temp; 
            }
            else
            {
                value = stack[top--];
                return value;
            }
        }
        internal T Peek()
        {
            T temp=default(T);
            if (top < 0)
            {
                //Console.WriteLine("No elements on the stack");
                return temp;
            }
            else
            {
                 T value = stack[top];
                return value;
            }
        }

        internal void PrintStackElements()
        {
            
            //T temp= default(T);
            if (top < 0)
            {
                Console.WriteLine("No elements on the stack");
               
            }            else
            {
                for (int i = top; i >= 0; i--)
                {
                    Console.WriteLine(stack[i]); 
                }
            }
        }
    }
}
