PizzaController
*********************
using JoePizza.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace JoePizza.Controllers
{
    public class PizzaController : Controller
    {
        List<PizzaDetails> pizzaDetails;
        static List<Order> orders = new List<Order>();
        public PizzaController()
        {
            pizzaDetails = new List<PizzaDetails>();
            Info info = new Info();
            info.InsertData();
            pizzaDetails = info.pizzaDetails;
        }
        // GET: PizzaController
        public ActionResult Index()
        {
            return View(pizzaDetails);
        }
        public ActionResult AddToCart(int id)
        {
            TempData["id"] = id;
            var ans = pizzaDetails.Find(x => x.Id == id);
            return View(ans);
        }
        [HttpPost]
        public ActionResult AddToCart(IFormCollection collection)
        {
            // int qty = Convert.ToInt32(Request.Form["qty"]);
            Order order = new Order();
            int id = Convert.ToInt32(TempData["id"]);
            order.Quantity = Convert.ToInt32(Request.Form["qty"]);
            var ans = pizzaDetails.Find(x => x.Id == id);
            order.ProdId = ans.Id;
            order.ProdName = ans.Name;
            order.Total = ans.Price * order.Quantity;
            orders.Add(order);
            return RedirectToAction("Checkout");
        }

        public ActionResult Checkout()
        {
            return View(orders);
        }

        // GET: PizzaController/Details/5
        public ActionResult Details(int id)
        {
            return View();
        }

        // GET: PizzaController/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: PizzaController/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(IFormCollection collection)
        {
            try
            {
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }

        // GET: PizzaController/Edit/5
        public ActionResult Edit(int id)
        {
            return View();
        }

        // POST: PizzaController/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(int id, IFormCollection collection)
        {
            try
            {
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }

        // GET: PizzaController/Delete/5
        public ActionResult Delete(int id)
        {
            return View();
        }

        // POST: PizzaController/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(int id, IFormCollection collection)
        {
            try
            {
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }
    }
}
***************************************
order.cs
*******************
namespace JoePizza.Models
{
    public class Order
    {
        public int ProdId { get; set; }
        public string ProdName { get; set; }

        public int Quantity { get; set; }

        public double Total { get; set; }

    }
}
************************************
PizzaDetails.cs
*************************************
namespace JoePizza.Models
{
    public class PizzaDetails
    {
        public int Id { get; set; }
        public string Name { get; set; }

        public int Price { get; set; }
        public double Rating { get; set; }

    }
}
************************************************
info.cs
*****************
using JoePizza.Models;

namespace JoePizza
{
    public class Info
    {
        public List<PizzaDetails> pizzaDetails;
        public Info()
        {
            pizzaDetails = new List<PizzaDetails>();
        }
        public void InsertData()
        {
            pizzaDetails.Add(new PizzaDetails() { Id = 1, Name = "CornandCheesePizza", Price = 179, Rating = 4.5 });
            pizzaDetails.Add(new PizzaDetails() { Id = 2, Name = "PannerParathaPizza", Price = 209, Rating = 4.6 });
            pizzaDetails.Add(new PizzaDetails() { Id = 3, Name = "VeggieParadise", Price = 459, Rating = 4.8 });
            
        }
        public bool ans()
        {
            return true;
        }
    }
}
*****************************************
index.cshtml
****************************************
@model IEnumerable<JoePizza.Models.PizzaDetails>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                    @Html.ActionLink("AddToCart", "AddToCart", new { id=item.Id }) |
               
            </td>
        </tr>
}
    </tbody>
</table>
********************************
AddToCart.cshtml
********************************
@model JoePizza.Models.PizzaDetails

@{
    ViewData["Title"] = "AddToCart";
}

<h1>AddToCart</h1>

<div>
    <h4>PizzaDetails</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
    </dl>
</div>
 <form asp-action="AddToCart">
<div>
   <label>Quantity : </label>
    <input type="number" placeholder="Quantity" id="qty" name="qty"/></br><br />
</div>
<div>
    <button style="background-color:red; border-color:blue;" type="submit" id="submit" value="submit">Submit</button><br/>
</div>
</form>

*****************************
Checkout.cshtml
*********************************
@model IEnumerable<JoePizza.Models.Order>

@{
    ViewData["Title"] = "Checkout";
}

<h1>Checkout</h1>

<p>
    <a asp-action="Index">Go to Index Page</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProdId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProdName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProdId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProdName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>*@
        </tr>
}
    </tbody>
</table>
*************************************
